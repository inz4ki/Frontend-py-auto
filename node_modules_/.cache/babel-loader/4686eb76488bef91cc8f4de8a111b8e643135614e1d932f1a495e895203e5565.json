{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ModalCadastro from '../components/ModalCadastro.vue';\nimport { http } from '../service/api';\nimport draggable from 'vuedraggable';\nexport default {\n  components: {\n    draggable,\n    ModalCadastro\n  },\n  data() {\n    return {\n      pk_id_tarefa: this.$route.params.pk_id_tarefa,\n      etapas: [],\n      dragging: false,\n      tarefa: ''\n    };\n  },\n  props: ['pk_id_tarefa'],\n  mounted() {\n    this.listarEtapas();\n    http.get(`tarefa/${this.pk_id_tarefa}`).then(response => {\n      this.tarefa = response.data;\n    });\n  },\n  methods: {\n    listarEtapas() {\n      http.get(`etapas/${this.pk_id_tarefa}`).then(response => {\n        this.etapas = response.data;\n      });\n    },\n    deletarTarefa(tarefa) {\n      if (confirm('Você deseja realmente Excluir a Tarefa?') == true) {\n        http.delete(`tarefa/${tarefa.pk_id_tarefa}`, {\n          data: tarefa\n        }).then(response => {\n          alert(\"Tarefa excluida com sucesso\");\n          this.$router.push('/');\n          return response;\n        }).catch(error => {\n          if (error.response.status = 404) {\n            alert('Erro ao Excluir');\n          }\n        });\n      } else {}\n    },\n    deletarEtapa(element) {\n      if (confirm('Você deseja realmente Excluir essa Etapa?') == true) {\n        http.delete(`etapa/${element.pk_id_etapa}`, {\n          data: element\n        }).then(response => {\n          alert(\"Etapa excluida com sucesso\");\n          this.listarEtapas();\n          return response;\n        }).catch(error => {\n          if (error.response.status = 404) {\n            alert('Erro ao Excluir');\n          }\n        });\n      } else {}\n    },\n    atualizarOrdem(e) {\n      console.log(e);\n      this.etapas.forEach((etapas, key) => {\n        etapas.ordem = key + 1;\n        http.put(`editar/etapas`, this.etapas).then(response => {\n          return console.log(response);\n        }).catch(error => {\n          if (error.response.status = 404) {\n            console.log(error);\n          }\n        });\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["ModalCadastro","http","draggable","components","data","pk_id_tarefa","$route","params","etapas","dragging","tarefa","props","mounted","listarEtapas","get","then","response","methods","deletarTarefa","confirm","delete","alert","$router","push","catch","error","status","deletarEtapa","element","pk_id_etapa","atualizarOrdem","e","console","log","forEach","key","ordem","put"],"sourceRoot":"","sources":["C:\\Users\\vinicius.martins\\Desktop\\pasta\\teste\\projeto-automacao\\src\\views\\EtapaView.vue"],"sourcesContent":["<script>\nimport ModalCadastro from '../components/ModalCadastro.vue'\nimport { http } from '../service/api'\nimport draggable from 'vuedraggable'\n\nexport default {\n  components: {\n    draggable,\n    ModalCadastro,\n\n  },\n  data() {\n    return {\n      pk_id_tarefa: this.$route.params.pk_id_tarefa,\n      etapas: [],\n      dragging: false,\n      tarefa: '',\n    }\n  },\n  props: ['pk_id_tarefa'],\n  mounted() {\n    this.listarEtapas();\n    http.get(`tarefa/${this.pk_id_tarefa}`)\n      .then(response => {\n        this.tarefa = response.data;\n      });\n  },\n  methods: {\n    listarEtapas() {\n      http.get(`etapas/${this.pk_id_tarefa}`)\n        .then(response => {\n          this.etapas = response.data;\n        });\n    },\n    deletarTarefa(tarefa) {\n      if (confirm('Você deseja realmente Excluir a Tarefa?')==true){\n        http.delete(`tarefa/${tarefa.pk_id_tarefa}`, { data: tarefa },\n      )\n        .then(response => {\n          alert(\"Tarefa excluida com sucesso\");\n          this.$router.push('/');\n          return response;\n        }).catch((error) => {\n          if (error.response.status = 404) {\n            alert('Erro ao Excluir');\n          }\n        })\n      }\n      else{}\n    },\n    deletarEtapa(element) {\n      if (confirm('Você deseja realmente Excluir essa Etapa?')==true){\n      http.delete(`etapa/${element.pk_id_etapa}`, { data: element },\n      )\n        .then(response => {\n          alert(\"Etapa excluida com sucesso\");\n          this.listarEtapas();\n          return response;\n        }).catch((error) => {\n          if (error.response.status = 404) {\n            alert('Erro ao Excluir');\n          }\n        })\n      }else{}\n    },\n    atualizarOrdem(e) {\n      console.log(e)\n      this.etapas.forEach((etapas, key) => {\n        etapas.ordem = key + 1\n        http.put(`editar/etapas`, this.etapas)\n          .then(response => {\n            return console.log(response);\n          }).catch((error) => {\n            if (error.response.status = 404) {\n              console.log(error);\n            }\n          })\n      })\n\n    },\n  },\n}\n</script>\n\n<template>\n  <div class=\"col-sm-8\">\n    <div>\n      <h1>{{ tarefa.nome_tarefa }}</h1>\n      <hr>\n    </div>\n\n    <table class=\"table\">\n      <thead class=\"table-dark\">\n        <tr>\n          <th scope=\"col\">Ordem</th>\n          <th scope=\"col\">Etapa</th>\n          <th scope=\"col\">Ação</th>\n          <th scope=\"col\">Tempo de Execução</th>\n          <th scope=\"col\"></th>\n        </tr>\n      </thead>\n      <!-- <tbody>\n                        <tr v-for=\"etapa in etapas\" :key=\"etapa.pk_id_etapa\">\n                          <td>{{ etapa.pk_id_etapa }}</td>\n                          <td>{{ etapa.nome_etapa }}</td>\n                          <td>{{ etapa.acao }}</td>\n                          <td>{{ etapa.tempo_execucao }} segundos</td>\n                          <td><button class=\"btn btn-sm btn-danger\" @click=\"deletarEtapa(etapa)\">Deletar Etapa</button></td>\n                        </tr>\n                      </tbody> -->\n\n      <draggable @end=\"atualizarOrdem\" v-model=\"etapas\" tag=\"tbody\" item-key=\"pk_id_etapa\">\n        <template #item=\"{ element, index }\" :key=\"index\">\n          <tr>\n            <td>{{ index + 1 }}</td>\n            <td>{{ element.nome_etapa }}</td>\n            <td>{{ element.acao }}</td>\n            <td>{{ element.tempo_execucao }} segundos</td>\n            <td><button class=\"btn btn-sm btn-danger\" @click=\"deletarEtapa(element)\">Deletar Etapa</button></td>\n          </tr>\n        </template>\n      </draggable>\n    </table>\n    <div class=\"btn-toolbar margem\" role=\"group\">\n      <div class=\"btn-group mr-2\">\n        <button class=\"btn btn-lg btn-outline-danger\" @click=\"deletarTarefa(tarefa)\">Excluir Tarefa</button>\n        <ModalCadastro class=\"row\" variant=\"outline-success btn-lg\">\n        </ModalCadastro>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\nh1 {\n  margin-top: 15px;\n}\n.margem{\n  margin-bottom: 30px;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}